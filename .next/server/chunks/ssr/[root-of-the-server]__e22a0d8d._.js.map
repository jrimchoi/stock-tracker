{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/jrchoi/Documents/GitHub/stock-tracker/lib/inngest/client.ts"],"sourcesContent":["import { Inngest} from \"inngest\";\n\nexport const inngest = new Inngest({\n    id: 'signalist',\n    ai: { gemini: { apiKey: process.env.GEMINI_API_KEY! }}\n})\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,UAAU,IAAI,2IAAO,CAAC;IAC/B,IAAI;IACJ,IAAI;QAAE,QAAQ;YAAE,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAAE;IAAC;AACzD","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/jrchoi/Documents/GitHub/stock-tracker/lib/actions/auth.actions.ts"],"sourcesContent":["'use server';\n\nimport {auth} from \"@/lib/better-auth/auth\";\nimport {inngest} from \"@/lib/inngest/client\";\nimport {headers} from \"next/headers\";\n\nexport const signUpWithEmail = async ({ email, password, fullName, country, investmentGoals, riskTolerance, preferredIndustry }: SignUpFormData) => {\n    try {\n        const response = await auth.api.signUpEmail({ body: { email, password, name: fullName } })\n\n        if(response) {\n            await inngest.send({\n                name: 'app/user.created',\n                data: { email, name: fullName, country, investmentGoals, riskTolerance, preferredIndustry }\n            })\n        }\n\n        return { success: true, data: response }\n    } catch (e) {\n        console.log('Sign up failed', e)\n        return { success: false, error: 'Sign up failed' }\n    }\n}\n\nexport const signInWithEmail = async ({ email, password }: SignInFormData) => {\n    try {\n        const response = await auth.api.signInEmail({ body: { email, password } })\n\n        return { success: true, data: response }\n    } catch (e) {\n        console.log('Sign in failed', e)\n        return { success: false, error: 'Sign in failed' }\n    }\n}\n\nexport const signOut = async () => {\n    try {\n        await auth.api.signOut({ headers: await headers() });\n    } catch (e) {\n        console.log('Sign out failed', e)\n        return { success: false, error: 'Sign out failed' }\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;;;;;;;;;;AAEO,MAAM,kBAAkB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,iBAAiB,EAAkB;IAC3I,IAAI;QACA,MAAM,WAAW,MAAM,qIAAI,CAAC,GAAG,CAAC,WAAW,CAAC;YAAE,MAAM;gBAAE;gBAAO;gBAAU,MAAM;YAAS;QAAE;QAExF,IAAG,UAAU;YACT,MAAM,mIAAO,CAAC,IAAI,CAAC;gBACf,MAAM;gBACN,MAAM;oBAAE;oBAAO,MAAM;oBAAU;oBAAS;oBAAiB;oBAAe;gBAAkB;YAC9F;QACJ;QAEA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAS;IAC3C,EAAE,OAAO,GAAG;QACR,QAAQ,GAAG,CAAC,kBAAkB;QAC9B,OAAO;YAAE,SAAS;YAAO,OAAO;QAAiB;IACrD;AACJ;AAEO,MAAM,kBAAkB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAkB;IACrE,IAAI;QACA,MAAM,WAAW,MAAM,qIAAI,CAAC,GAAG,CAAC,WAAW,CAAC;YAAE,MAAM;gBAAE;gBAAO;YAAS;QAAE;QAExE,OAAO;YAAE,SAAS;YAAM,MAAM;QAAS;IAC3C,EAAE,OAAO,GAAG;QACR,QAAQ,GAAG,CAAC,kBAAkB;QAC9B,OAAO;YAAE,SAAS;YAAO,OAAO;QAAiB;IACrD;AACJ;AAEO,MAAM,UAAU;IACnB,IAAI;QACA,MAAM,qIAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YAAE,SAAS,MAAM,IAAA,0IAAO;QAAG;IACtD,EAAE,OAAO,GAAG;QACR,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,OAAO;YAAE,SAAS;YAAO,OAAO;QAAkB;IACtD;AACJ;;;IApCa;IAkBA;IAWA;;AA7BA,+OAAA;AAkBA,+OAAA;AAWA,+OAAA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/jrchoi/Documents/GitHub/stock-tracker/.next-internal/server/app/%28auth%29/sign-up/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signUpWithEmail as '7fc11c9a7981229076e31f27cc419f8dd06de9424a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/jrchoi/Documents/GitHub/stock-tracker/app/%28auth%29/sign-up/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(auth)/sign-up/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(auth)/sign-up/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///Users/jrchoi/Documents/GitHub/stock-tracker/app/%28auth%29/sign-up/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(auth)/sign-up/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(auth)/sign-up/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}